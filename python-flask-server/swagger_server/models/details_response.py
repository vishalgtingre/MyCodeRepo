# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DetailsResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, account_number: str=None, currency: str=None, account_holder_name: str=None):  # noqa: E501
        """DetailsResponse - a model defined in Swagger

        :param account_number: The account_number of this DetailsResponse.  # noqa: E501
        :type account_number: str
        :param currency: The currency of this DetailsResponse.  # noqa: E501
        :type currency: str
        :param account_holder_name: The account_holder_name of this DetailsResponse.  # noqa: E501
        :type account_holder_name: str
        """
        self.swagger_types = {
            'account_number': str,
            'currency': str,
            'account_holder_name': str
        }

        self.attribute_map = {
            'account_number': 'accountNumber',
            'currency': 'currency',
            'account_holder_name': 'AccountHolderName'
        }

        self._account_number = account_number
        self._currency = currency
        self._account_holder_name = account_holder_name

    @classmethod
    def from_dict(cls, dikt) -> 'DetailsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The detailsResponse of this DetailsResponse.  # noqa: E501
        :rtype: DetailsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number(self) -> str:
        """Gets the account_number of this DetailsResponse.

        The IBAN for which the details were retrieved  # noqa: E501

        :return: The account_number of this DetailsResponse.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number: str):
        """Sets the account_number of this DetailsResponse.

        The IBAN for which the details were retrieved  # noqa: E501

        :param account_number: The account_number of this DetailsResponse.
        :type account_number: str
        """
        if account_number is None:
            raise ValueError("Invalid value for `account_number`, must not be `None`")  # noqa: E501

        self._account_number = account_number

    @property
    def currency(self) -> str:
        """Gets the currency of this DetailsResponse.

        Currency of the account, 3 characters alphabetic ISO currency code (e.g. EUR or USD) as per ISO 4217  # noqa: E501

        :return: The currency of this DetailsResponse.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this DetailsResponse.

        Currency of the account, 3 characters alphabetic ISO currency code (e.g. EUR or USD) as per ISO 4217  # noqa: E501

        :param currency: The currency of this DetailsResponse.
        :type currency: str
        """

        self._currency = currency

    @property
    def account_holder_name(self) -> str:
        """Gets the account_holder_name of this DetailsResponse.

        Name of the owner of the account  # noqa: E501

        :return: The account_holder_name of this DetailsResponse.
        :rtype: str
        """
        return self._account_holder_name

    @account_holder_name.setter
    def account_holder_name(self, account_holder_name: str):
        """Sets the account_holder_name of this DetailsResponse.

        Name of the owner of the account  # noqa: E501

        :param account_holder_name: The account_holder_name of this DetailsResponse.
        :type account_holder_name: str
        """

        self._account_holder_name = account_holder_name
